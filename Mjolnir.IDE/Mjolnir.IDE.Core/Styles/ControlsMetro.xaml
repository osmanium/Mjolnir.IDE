<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:controls="clr-namespace:Mjolnir.IDE.Core.Controls"
                    xmlns:inspectorControls="clr-namespace:Mjolnir.IDE.Core.Controls.Inspector">
    

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="VS2013/Menu.xaml" />
        <ResourceDictionary Source="VS2013/Toolbar.xaml" />
        <ResourceDictionary Source="VS2013/Tooltip.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <!--Menu Item Binding with Icon-->
    <Image x:Key="imgCTX" x:Shared="false" Source="{Binding Path=Icon}" Height="16px" Width="16px" />
    <Style x:Key="MetroMenuStyle" TargetType="MenuItem" BasedOn="{StaticResource MetroMenuItem}">
        <Setter Property="Icon" Value="{StaticResource imgCTX}" />
        <Setter Property="Header" Value="{Binding Path=Text}" />
        <Setter Property="IsCheckable" Value="{Binding Path=IsCheckable}" />
        <Setter Property="IsChecked" Value="{Binding Path=IsChecked}" />
        <Setter Property="Command" Value="{Binding Path=Command}" />
        <Setter Property="CommandParameter" Value="{Binding Path=CommandParameter}" />
        <Setter Property="ItemsSource" Value="{Binding Children}" />
        <Setter Property="InputGestureText" Value="{Binding InputGestureText}" />
        <Setter Property="Visibility" Value="{Binding ., Converter={StaticResource ResourceKey=cvc}}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsSeparator}" Value="true">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition MinWidth="30" Width="Auto" SharedSizeGroup="Icon" />
                                    <ColumnDefinition MinWidth="70" Width="*" />
                                </Grid.ColumnDefinitions>
                                <Separator Grid.Column="1" Height="1" />
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Icon}" Value="{x:Null}">
                <Setter Property="Icon" Value="{x:Null}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ToolbarContextMenu" TargetType="{x:Type MenuItem}"  BasedOn="{StaticResource MetroMenuItem}">
        <Setter Property="Header" Value="{Binding Path=Text}" />
        <Setter Property="IsCheckable" Value="True" />
        <Setter Property="IsChecked" Value="{Binding Path=IsChecked}" />
        <Setter Property="Command" Value="{Binding Path=Command}" />
        <Setter Property="CommandParameter" Value="{Binding Path=Key}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsSeparator}" Value="true">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition MinWidth="30" Width="Auto" SharedSizeGroup="Icon" />
                                    <ColumnDefinition MinWidth="70" Width="*" />
                                </Grid.ColumnDefinitions>
                                <Separator Grid.Column="1" Height="1" />
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
        </Style.Triggers>
    </Style>



    <ControlTemplate x:Key="ExpanderToggleButton" TargetType="ToggleButton">
        <Border Background="{DynamicResource ExpanderExBackground}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="20" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Border Grid.Column="0" CornerRadius="2,0,0,0">
                    <Path Name="Arrow"
						  Fill="{DynamicResource ExpanderExGlyph}"
						  HorizontalAlignment="Center"
						  VerticalAlignment="Center"
						  Data="M 0 0 L 0 8 L 4 4 Z"/>
                </Border>
                <ContentPresenter Grid.Column="1"
								  Margin="4" 
								  ContentSource="Content" 
								  RecognizesAccessKey="True" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter TargetName="Arrow" Property="Data"
							Value="M 0 0 L 4 4 L 8 0 Z" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground"
							Value="{DynamicResource ExpanderExDisabledForeground}"/>
                <Setter TargetName="Arrow" Property="Fill"
							Value="{DynamicResource ExpanderExDisabledForeground}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>


    <Style TargetType="controls:ExpanderEx">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:ExpanderEx">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Name="ContentRow" Height="0" />
                        </Grid.RowDefinitions>

                        <ToggleButton Grid.Row="0"
									  IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
									  OverridesDefaultStyle="True" 
									  Template="{StaticResource ExpanderToggleButton}"
									  Content="{TemplateBinding Header}"
									  Foreground="{DynamicResource EnvironmentToolWindowText}"
									  />

                        <Border Name="Content" Grid.Row="1">
                            <ContentPresenter />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="True">
                            <Setter TargetName="ContentRow" Property="Height"
									Value="{Binding Height, ElementName=Content}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground"
									Value="{DynamicResource ExpanderExDisabledForeground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <inspectorControls:InspectorItemTemplateSelector x:Key="InspectorItemTemplateSelector">
        <inspectorControls:InspectorItemTemplateSelector.LabelledTemplate>
            <DataTemplate>
                <Grid IsEnabled="{Binding IsReadOnly, Converter={StaticResource InverseBoolConverter}}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="{Binding Path=(inspectorControls:InspectorGrid.PropertyNameColumnWidth), Mode=TwoWay}" MinWidth="50" />
                        <ColumnDefinition Width="5" />
                        <ColumnDefinition Width="{Binding Path=(inspectorControls:InspectorGrid.PropertyValueColumnWidth), Mode=TwoWay}" MinWidth="50" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Label Grid.Column="0" 
                           ToolTip="{Binding Description}"
                           HorizontalContentAlignment="Left"
                           VerticalAlignment="Center">
                        <TextBlock Text="{Binding Name}" TextTrimming="CharacterEllipsis" Foreground="{DynamicResource EnvironmentToolWindowText}" />
                    </Label>
                    <inspectorControls:SimpleGridSplitter Grid.Column="1" Width="5" ResizeBehavior="PreviousAndNext" />
                    <Border Grid.Column="2" Padding="0 2 5 2" VerticalAlignment="Center">
                        <ContentControl  IsTabStop="False" />
                    </Border>
                    <Button Grid.Column="3" Margin="5,0,0,0"
                            Foreground="{DynamicResource EnvironmentToolWindowText}"
                            Style="{StaticResource ResetButton}"
                            IsEnabled="{Binding IsDirty}"/>
                </Grid>
            </DataTemplate>
        </inspectorControls:InspectorItemTemplateSelector.LabelledTemplate>
        <inspectorControls:InspectorItemTemplateSelector.DefaultTemplate>
            <DataTemplate>
                <ContentControl IsEnabled="{Binding IsReadOnly, Converter={StaticResource InverseBoolConverter}}" />
            </DataTemplate>
        </inspectorControls:InspectorItemTemplateSelector.DefaultTemplate>
    </inspectorControls:InspectorItemTemplateSelector>


</ResourceDictionary>